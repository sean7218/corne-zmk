/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>


/ {
    behaviors {
        mt: mod_tap {
            compatible = "zmk,behavior-hold-tap";
            #binding-cells = <2>;
            flavor = "tap-preferred";
            tapping-term-ms = <300>;
            bindings = <&kp>, <&kp>;

            display-name = "Mod-Tap";
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  Q  |  W  |  E  |  R  |  T  |   |  Y  |  U   |  I  |  O  |  P  | BSPC |
            // | CTRL |  A  |  S  |  D  |  F  |  G  |   |  H  |  J   |  K  |  L  |  ;  |  '   |
            // | SHFT |  Z  |  X  |  C  |  V  |  B  |   |  N  |  M   |  ,  |  .  |  /  | ESC  |
            //                    | GUI | LWR | SPC |   | ENT | RSE  | ALT |

            bindings = <
&kp TAB        &kp Q        &kp W       &kp E         &kp R         &kp T        &kp Y      &kp U        &kp I       &kp O       &kp P           &kp GRAVE
&mt LCTRL ESC  &mt LCTRL A  &mt LALT S  &mt LGUI D    &mt LSHFT F   &kp G        &kp H      &mt RSHFT J  &mt RGUI K  &mt RALT L  &mt RCTRL SEMI  &kp SQT
&kp LSHFT      &kp Z        &kp X       &kp C         &kp V         &kp B        &kp N      &kp M        &kp COMMA   &kp DOT     &kp FSLH        &kp RSHFT
                                        &kp LEFT_ALT  &kp LEFT_GUI  &kp SPACE    &lt 1 RET  &lt 2 BSPC   &mo 3
            >;
        };

        lower_layer {
            // -----------------------------------------------------------------------------------------
            // |      |  1  |  2  |  3  |  4  |  5  |   |  6  |  7  |  8  |  9  |  0  |      |
            // |      |     |     |     |     |     |   | LFT | DWN |  UP | RGT |     |      |
            // |      |     |     |     |     |     |   |     |     |     |     |     |      |
            //                    |     |     |     |   |     |     |     |

            bindings = <
&trans  &kp N1  &kp N2  &kp N3  &kp N4  &kp N5    &kp N6    &kp N7         &kp N8       &kp N9     &kp N0  &trans
&trans  &trans  &trans  &trans  &trans  &trans    &kp LEFT  &kp DOWN       &kp UP       &kp RIGHT  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans    &kp HOME  &kp PAGE_DOWN  &kp PAGE_UP  &kp END    &trans  &trans
                        &trans  &trans  &trans    &trans    &trans         &trans
            >;
        };

        raise_layer {
            // -----------------------------------------------------------------------------------------
            // |      |  !  |  @  |  #  |  $  |  %  |   |  ^  |  &  |  *  |  (  |  )  |      |
            // |      |     |     |     |     |     |   |  -  |  =  |  [  |  ]  |  \  |  `   |
            // |      |     |     |     |     |     |   |  _  |  +  |  {  |  }  | "|" |  ~   |
            //                    |     |     |     |   |     |     |     |

            bindings = <
&trans  &kp EXCL  &kp AT  &kp HASH  &kp DLLR  &kp PRCNT    &kp CARET  &kp AMPS   &kp ASTRK  &kp LPAR  &kp RPAR  &trans
&trans  &trans    &trans  &trans    &trans    &trans       &kp MINUS  &kp EQUAL  &kp LBKT   &kp RBKT  &kp BSLH  &kp GRAVE
&trans  &trans    &trans  &trans    &trans    &trans       &kp UNDER  &kp PLUS   &kp LBRC   &kp RBRC  &kp PIPE  &kp TILDE
                          &trans    &trans    &trans       &trans     &trans     &trans
            >;
        };

        fn_layer {
            bindings = <
&trans  &kp F1   &kp F2     &kp F3           &kp F4       &kp F5    &kp F6      &kp F7        &kp F8           &kp F9  &kp F10  &trans
&trans  &kp F11  &kp F12    &kp PRINTSCREEN  &trans       &trans    &kp K_MUTE  &kp C_VOL_DN  &kp C_VOLUME_UP  &trans  &trans   &trans
&trans  &trans   &kp K_CUT  &kp K_COPY       &kp K_PASTE  &trans    &trans      &trans        &trans           &trans  &trans   &trans
                            &trans           &trans       &trans    &trans      &trans        &trans
            >;
        };
    };
};

